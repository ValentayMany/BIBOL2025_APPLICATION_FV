import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:BIBOL/models/course/course_model.dart';

// ‡πÄ‡∏û‡∏¥‡πà‡∏° CustomPainter ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö background pattern
class BackgroundPatternPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    final paint =
        Paint()
          ..color = Colors.white.withOpacity(0.05)
          ..style = PaintingStyle.stroke
          ..strokeWidth = 1.0;

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á grid pattern
    for (double i = 0; i < size.width; i += 30) {
      canvas.drawLine(Offset(i, 0), Offset(i, size.height), paint);
    }

    for (double i = 0; i < size.height; i += 30) {
      canvas.drawLine(Offset(0, i), Offset(size.width, i), paint);
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÄ‡∏õ‡πá‡∏ô decoration
    final circlePaint =
        Paint()
          ..color = Colors.white.withOpacity(0.08)
          ..style = PaintingStyle.fill;

    canvas.drawCircle(
      Offset(size.width * 0.8, size.height * 0.3),
      20,
      circlePaint,
    );

    canvas.drawCircle(
      Offset(size.width * 0.2, size.height * 0.7),
      15,
      circlePaint,
    );
  }

  @override
  bool shouldRepaint(CustomPainter oldDelegate) => false;
}

class CourseDetailPage extends StatefulWidget {
  final CourseModel course;

  const CourseDetailPage({Key? key, required this.course}) : super(key: key);

  @override
  State<CourseDetailPage> createState() => _CourseDetailPageState();
}

class _CourseDetailPageState extends State<CourseDetailPage>
    with TickerProviderStateMixin {
  late AnimationController _fadeController;
  late AnimationController _slideController;
  late Animation<double> _fadeAnimation;
  late Animation<Offset> _slideAnimation;

  @override
  void initState() {
    super.initState();
    _setupAnimations();
    _setupErrorHandling(); // ‡πÄ‡∏û‡∏¥‡πà‡∏° error handling
  }

  void _setupAnimations() {
    _fadeController = AnimationController(
      duration: Duration(milliseconds: 800),
      vsync: this,
    );
    _slideController = AnimationController(
      duration: Duration(milliseconds: 600),
      vsync: this,
    );

    _fadeAnimation = Tween<double>(
      begin: 0.0,
      end: 1.0,
    ).animate(CurvedAnimation(parent: _fadeController, curve: Curves.easeOut));

    _slideAnimation = Tween<Offset>(
      begin: Offset(0, 0.3),
      end: Offset.zero,
    ).animate(
      CurvedAnimation(parent: _slideController, curve: Curves.elasticOut),
    );

    _fadeController.forward();
    _slideController.forward();
  }

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Images
  void _setupErrorHandling() {
    FlutterError.onError = (FlutterErrorDetails details) {
      // ‡∏ã‡πà‡∏≠‡∏ô error ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö network images
      if (details.exception.toString().contains('HTTP request failed') ||
          details.exception.toString().contains('images.unsplash.com') ||
          details.exception.toString().contains('404')) {
        // ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á error ‡πÅ‡∏ï‡πà log ‡πÑ‡∏ß‡πâ
        print('üñºÔ∏è Image loading error (ignored): ${details.exception}');
        return;
      }
      // ‡πÅ‡∏™‡∏î‡∏á error ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
      FlutterError.presentError(details);
    };
  }

  @override
  void dispose() {
    _fadeController.dispose();
    _slideController.dispose();
    super.dispose();
  }

  Widget _buildCourseIcon() {
    return Container(
      width: 80,
      height: 80,
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(20),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.2),
            blurRadius: 15,
            offset: Offset(0, 8),
          ),
        ],
      ),
      child: Icon(
        FontAwesomeIcons.graduationCap,
        size: 40,
        color: Color(0xFF07325D),
      ),
    );
  }

  String _stripHtmlTags(String htmlString) {
    if (htmlString.isEmpty) return '';
    String stripped = htmlString.replaceAll(RegExp(r'<[^>]*>'), '');
    stripped = stripped
        .replaceAll('&nbsp;', ' ')
        .replaceAll('&amp;', '&')
        .replaceAll('&lt;', '<')
        .replaceAll('&gt;', '>')
        .replaceAll('&quot;', '"')
        .replaceAll('&#x27;', "'")
        .replaceAll('&#x2F;', '/')
        .replaceAll('&hellip;', '...')
        .replaceAll('&mdash;', '‚Äî')
        .replaceAll('&ndash;', '‚Äì');
    return stripped.replaceAll(RegExp(r'\s+'), ' ').trim();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey[50],
      body: CustomScrollView(
        slivers: [
          _buildSliverAppBar(),
          SliverToBoxAdapter(
            child: FadeTransition(
              opacity: _fadeAnimation,
              child: SlideTransition(
                position: _slideAnimation,
                child: Column(
                  children: [
                    _buildCourseOverviewCard(),
                    _buildCourseDetailsSection(),
                    _buildCurriculumSection(),
                    _buildCareerProspectsSection(),
                    _buildAdmissionRequirementsSection(),
                    _buildContactSection(),
                    SizedBox(height: 100),
                  ],
                ),
              ),
            ),
          ),
        ],
      ),
      floatingActionButton: _buildFloatingActionButton(),
    );
  }

  Widget _buildSliverAppBar() {
    return SliverAppBar(
      expandedHeight: 300,
      floating: false,
      pinned: true,
      backgroundColor: Color(0xFF07325D),
      leading: IconButton(
        onPressed: () {
          HapticFeedback.lightImpact();
          Navigator.pop(context);
        },
        icon: Container(
          padding: EdgeInsets.all(8),
          decoration: BoxDecoration(
            color: Colors.white.withOpacity(0.9),
            borderRadius: BorderRadius.circular(12),
          ),
          child: Icon(Icons.arrow_back_ios, color: Color(0xFF07325D), size: 20),
        ),
      ),
      actions: [
        IconButton(
          onPressed: () {
            // Share course
          },
          icon: Container(
            padding: EdgeInsets.all(8),
            decoration: BoxDecoration(
              color: Colors.white.withOpacity(0.9),
              borderRadius: BorderRadius.circular(12),
            ),
            child: Icon(
              Icons.share_outlined,
              color: Color(0xFF07325D),
              size: 20,
            ),
          ),
        ),
        SizedBox(width: 16),
      ],
      flexibleSpace: FlexibleSpaceBar(
        background: Container(
          decoration: BoxDecoration(
            gradient: LinearGradient(
              colors: [Color(0xFF07325D), Color(0xFF0A4A73)],
              begin: Alignment.topCenter,
              end: Alignment.bottomCenter,
            ),
          ),
          child: Stack(
            children: [
              // ‚úÖ Background Pattern ‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
              CustomPaint(
                painter: BackgroundPatternPainter(),
                child: Container(),
              ),

              // Gradient Overlay
              Container(
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    colors: [
                      Color(0xFF07325D).withOpacity(0.8),
                      Color(0xFF0A4A73).withOpacity(0.8),
                    ],
                    begin: Alignment.topCenter,
                    end: Alignment.bottomCenter,
                  ),
                ),
              ),

              // Content
              Positioned(
                bottom: 30,
                left: 20,
                right: 20,
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    // Course Icon
                    Hero(
                      tag: 'course_icon_${widget.course.id}',
                      child: _buildCourseIcon(),
                    ),
                    SizedBox(height: 16),

                    // Course Title
                    Hero(
                      tag: 'course_title_${widget.course.id}',
                      child: Material(
                        color: Colors.transparent,
                        child: Text(
                          widget.course.title,
                          style: GoogleFonts.notoSansLao(
                            fontSize: 24,
                            fontWeight: FontWeight.bold,
                            color: Colors.white,
                            height: 1.2,
                          ),
                        ),
                      ),
                    ),
                    SizedBox(height: 8),

                    // Course Type Badge
                    Container(
                      padding: EdgeInsets.symmetric(
                        horizontal: 12,
                        vertical: 6,
                      ),
                      decoration: BoxDecoration(
                        color: Colors.white.withOpacity(0.9),
                        borderRadius: BorderRadius.circular(20),
                      ),
                      child: Text(
                        _getCourseTypeFromTitle(),
                        style: GoogleFonts.notoSansLao(
                          fontSize: 12,
                          color: Color(0xFF07325D),
                          fontWeight: FontWeight.w600,
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠
  String _getCourseTypeFromTitle() {
    final title = widget.course.title.toLowerCase();
    if (title.contains('‡∫õ‡∫∞‡∫•‡∫¥‡∫ô‡∫ç‡∫≤‡ªÇ‡∫ó')) return '‡∫õ‡∫∞‡∫•‡∫¥‡∫ô‡∫ç‡∫≤‡ªÇ‡∫ó ‡∫•‡∫∞‡∫ö‡∫ª‡∫ö 2 ‡∫õ‡∫µ';
    if (title.contains('‡∫ï‡ªç‡ªà‡ªÄ‡∫ô‡∫∑‡ªà‡∫≠‡∫á') && title.contains('‡∫û‡∫≤‡∫Å‡∫Ñ‡ªà‡∫≥'))
      return '‡∫ï‡ªç‡ªà‡ªÄ‡∫ô‡∫∑‡ªà‡∫≠‡∫á ‡∫û‡∫≤‡∫Å‡∫Ñ‡ªà‡∫≥ ‡∫•‡∫∞‡∫ö‡∫ª‡∫ö 2 ‡∫õ‡∫µ';
    if (title.contains('‡∫ï‡ªç‡ªà‡ªÄ‡∫ô‡∫∑‡ªà‡∫≠‡∫á')) return '‡∫ï‡ªç‡ªà‡ªÄ‡∫ô‡∫∑‡ªà‡∫≠‡∫á ‡∫û‡∫≤‡∫Å‡∫õ‡∫ª‡∫Å‡∫Å‡∫∞‡∫ï‡∫¥ ‡∫•‡∫∞‡∫ö‡∫ª‡∫ö 2 ‡∫õ‡∫µ';
    if (title.contains('4 ‡∫õ‡∫µ')) return '‡∫õ‡∫∞‡∫•‡∫¥‡∫ô‡∫ç‡∫≤‡∫ï‡∫µ ‡∫•‡∫∞‡∫ö‡∫ª‡∫ö 4 ‡∫õ‡∫µ';
    return '‡∫õ‡∫∞‡∫•‡∫¥‡∫ô‡∫ç‡∫≤‡∫ï‡∫µ';
  }

  Widget _buildCourseOverviewCard() {
    return Container(
      margin: EdgeInsets.all(20),
      padding: EdgeInsets.all(24),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.06),
            blurRadius: 10,
            offset: Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Container(
                padding: EdgeInsets.all(8),
                decoration: BoxDecoration(
                  color: Color(0xFF07325D).withOpacity(0.1),
                  borderRadius: BorderRadius.circular(8),
                ),
                child: Icon(
                  Icons.school_outlined,
                  color: Color(0xFF07325D),
                  size: 24,
                ),
              ),
              SizedBox(width: 12),
              Expanded(
                child: Text(
                  '‡∫•‡∫≤‡∫ç‡∫•‡∫∞‡∫≠‡∫Ω‡∫î‡∫´‡∫º‡∫±‡∫Å‡∫™‡∫π‡∫î',
                  style: GoogleFonts.notoSansLao(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: Color(0xFF07325D),
                  ),
                ),
              ),
            ],
          ),
          SizedBox(height: 20),

          // ‡πÅ‡∏™‡∏î‡∏á details ‡∏à‡∏≤‡∏Å API
          Container(
            padding: EdgeInsets.all(16),
            decoration: BoxDecoration(
              color: Color(0xFF07325D).withOpacity(0.03),
              borderRadius: BorderRadius.circular(12),
              border: Border.all(
                color: Color(0xFF07325D).withOpacity(0.1),
                width: 1,
              ),
            ),
            child: Text(
              _stripHtmlTags(widget.course.details),
              style: GoogleFonts.notoSansLao(
                fontSize: 15,
                color: Colors.grey[800],
                height: 1.7,
                fontWeight: FontWeight.w400,
              ),
            ),
          ),

          SizedBox(height: 20),

          // ‡πÅ‡∏¢‡∏Å‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏≤‡∏Ç‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
          if (widget.course.details.contains('‡∫™‡∫≤‡∫Ç‡∫≤')) ...[
            Row(
              children: [
                Icon(
                  Icons.account_tree_outlined,
                  color: Color(0xFF07325D),
                  size: 20,
                ),
                SizedBox(width: 8),
                Text(
                  '‡∫™‡∫≤‡∫Ç‡∫≤‡∫ß‡∫¥‡∫ä‡∫≤‡∫ó‡∫µ‡ªà‡ªÄ‡∫õ‡∫µ‡∫î‡∫™‡∫≠‡∫ô',
                  style: GoogleFonts.notoSansLao(
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                    color: Color(0xFF07325D),
                  ),
                ),
              ],
            ),
            SizedBox(height: 12),
            _buildMajorsList(),
          ],
        ],
      ),
    );
  }

  Widget _buildMajorsList() {
    // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Ç‡∏≤‡∏à‡∏≤‡∏Å details
    List<String> majors = _extractMajorsFromDetails(widget.course.details);

    return Column(
      children:
          majors
              .map(
                (major) => Container(
                  margin: EdgeInsets.only(bottom: 8),
                  padding: EdgeInsets.symmetric(horizontal: 16, vertical: 12),
                  decoration: BoxDecoration(
                    color: Colors.white,
                    borderRadius: BorderRadius.circular(10),
                    border: Border.all(
                      color: Color(0xFF07325D).withOpacity(0.15),
                      width: 1,
                    ),
                    boxShadow: [
                      BoxShadow(
                        color: Colors.black.withOpacity(0.02),
                        blurRadius: 4,
                        offset: Offset(0, 2),
                      ),
                    ],
                  ),
                  child: Row(
                    children: [
                      Container(
                        width: 8,
                        height: 8,
                        decoration: BoxDecoration(
                          color: Color(0xFF07325D),
                          shape: BoxShape.circle,
                        ),
                      ),
                      SizedBox(width: 12),
                      Expanded(
                        child: Text(
                          major,
                          style: GoogleFonts.notoSansLao(
                            fontSize: 14,
                            color: Colors.grey[700],
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                      ),
                      Icon(
                        Icons.arrow_forward_ios,
                        size: 14,
                        color: Colors.grey[400],
                      ),
                    ],
                  ),
                ),
              )
              .toList(),
    );
  }

  List<String> _extractMajorsFromDetails(String details) {
    // ‡∏î‡∏∂‡∏á‡∏™‡∏≤‡∏Ç‡∏≤‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° details
    List<String> majors = [];

    if (details.contains('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡∫ó‡∫∞‡∫ô‡∫≤‡∫Ñ‡∫≤‡∫ô')) majors.add('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡∫ó‡∫∞‡∫ô‡∫≤‡∫Ñ‡∫≤‡∫ô');
    if (details.contains('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô') &&
        !details.contains('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô-‡∫Å‡∫≤‡∫ô‡∫ó‡∫∞‡∫ô‡∫≤‡∫Ñ‡∫≤‡∫ô'))
      majors.add('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô');
    if (details.contains('‡∫™‡∫≤‡∫Ç‡∫≤‡∫ö‡∫±‡∫ô‡∫ä‡∫µ') || details.contains('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡∫ö‡∫±‡∫ô‡∫ä‡∫µ'))
      majors.add('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡∫ö‡∫±‡∫ô‡∫ä‡∫µ');
    if (details.contains('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫à‡∫∏‡∫•‡∫∞‡∫û‡∫≤‡∫Å'))
      majors.add('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫à‡∫∏‡∫•‡∫∞‡∫û‡∫≤‡∫Å');
    if (details.contains('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡∫ö‡∫±‡∫ô‡∫ä‡∫µ‡ªÅ‡∫•‡∫∞‡∫Å‡∫ß‡∫î‡∫™‡∫≠‡∫ö'))
      majors.add('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡∫ö‡∫±‡∫ô‡∫ä‡∫µ‡ªÅ‡∫•‡∫∞‡∫Å‡∫ß‡∫î‡∫™‡∫≠‡∫ö');
    if (details.contains('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡∫ï‡∫∞‡∫´‡∫º‡∫≤‡∫î‡∫î‡∫µ‡∫à‡∫¥‡∫ï‡∫≠‡∫ô'))
      majors.add('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡∫ï‡∫∞‡∫´‡∫º‡∫≤‡∫î‡∫î‡∫µ‡∫à‡∫¥‡∫ï‡∫≠‡∫ô');
    if (details.contains('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô-‡∫Å‡∫≤‡∫ô‡∫ó‡∫∞‡∫ô‡∫≤‡∫Ñ‡∫≤‡∫ô'))
      majors.add('‡∫™‡∫≤‡∫Ç‡∫≤‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô-‡∫Å‡∫≤‡∫ô‡∫ó‡∫∞‡∫ô‡∫≤‡∫Ñ‡∫≤‡∫ô');

    return majors;
  }

  Widget _buildCourseDetailsSection() {
    return Container(
      margin: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
      child: Column(
        children: [
          _buildDetailCard(
            icon: Icons.access_time,
            title: '‡ªÑ‡∫•‡∫ç‡∫∞‡ªÄ‡∫ß‡∫•‡∫≤‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤',
            content: _getCourseDuration(),
            color: Color(0xFF2E7D32),
          ),
          SizedBox(height: 16),
          _buildDetailCard(
            icon: Icons.schedule,
            title: '‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤',
            content: _getCourseSystem(),
            color: Color(0xFF1976D2),
          ),
          SizedBox(height: 16),
          _buildDetailCard(
            icon: Icons.school,
            title: '‡∫•‡∫∞‡∫î‡∫±‡∫ö‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤',
            content: _getCourseLevel(),
            color: Color(0xFF7B1FA2),
          ),
          SizedBox(height: 16),
          _buildDetailCard(
            icon: Icons.payments,
            title: '‡∫Ñ‡ªà‡∫≤‡∫ó‡∫≥‡∫ô‡∫Ω‡∫°‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤',
            content: '‡∫ï‡∫¥‡∫î‡∫ï‡ªç‡ªà‡∫™‡∫≠‡∫ö‡∫ñ‡∫≤‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤',
            color: Color(0xFFE65100),
          ),
        ],
      ),
    );
  }

  String _getCourseDuration() {
    final title = widget.course.title.toLowerCase();
    if (title.contains('4 ‡∫õ‡∫µ')) return '4 ‡∫õ‡∫µ (8 ‡∫û‡∫≤‡∫Å‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤)';
    if (title.contains('2 ‡∫õ‡∫µ')) return '2 ‡∫õ‡∫µ (4 ‡∫û‡∫≤‡∫Å‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤)';
    return '‡∫ï‡∫¥‡∫î‡∫ï‡ªç‡ªà‡∫™‡∫≠‡∫ö‡∫ñ‡∫≤‡∫°';
  }

  String _getCourseSystem() {
    final title = widget.course.title.toLowerCase();
    if (title.contains('‡∫û‡∫≤‡∫Å‡∫Ñ‡ªà‡∫≥')) return '‡∫û‡∫≤‡∫Å‡∫Ñ‡ªà‡∫≥ (Evening Program)';
    if (title.contains('‡∫û‡∫≤‡∫Å‡∫õ‡∫ª‡∫Å‡∫Å‡∫∞‡∫ï‡∫¥')) return '‡∫û‡∫≤‡∫Å‡∫õ‡∫ª‡∫Å‡∫Å‡∫∞‡∫ï‡∫¥ (Regular Program)';
    if (title.contains('‡∫ï‡ªç‡ªà‡ªÄ‡∫ô‡∫∑‡ªà‡∫≠‡∫á')) return '‡∫ï‡ªç‡ªà‡ªÄ‡∫ô‡∫∑‡ªà‡∫≠‡∫á (Continuing Education)';
    return '‡∫û‡∫≤‡∫Å‡∫õ‡∫ª‡∫Å‡∫Å‡∫∞‡∫ï‡∫¥ (Regular Program)';
  }

  String _getCourseLevel() {
    final title = widget.course.title.toLowerCase();
    if (title.contains('‡∫õ‡∫∞‡∫•‡∫¥‡∫ô‡∫ç‡∫≤‡ªÇ‡∫ó')) return '‡∫õ‡∫∞‡∫•‡∫¥‡∫ô‡∫ç‡∫≤‡ªÇ‡∫ó (Master\'s Degree)';
    if (title.contains('‡∫õ‡∫∞‡∫•‡∫¥‡∫ô‡∫ç‡∫≤‡∫ï‡∫µ')) return '‡∫õ‡∫∞‡∫•‡∫¥‡∫ô‡∫ç‡∫≤‡∫ï‡∫µ (Bachelor\'s Degree)';
    return '‡∫õ‡∫∞‡∫•‡∫¥‡∫ô‡∫ç‡∫≤‡∫ï‡∫µ (Bachelor\'s Degree)';
  }

  Widget _buildDetailCard({
    required IconData icon,
    required String title,
    required String content,
    required Color color,
  }) {
    return Container(
      padding: EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(12),
        border: Border.all(color: color.withOpacity(0.2), width: 1),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.04),
            blurRadius: 6,
            offset: Offset(0, 2),
          ),
        ],
      ),
      child: Row(
        children: [
          Container(
            padding: EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: color.withOpacity(0.1),
              borderRadius: BorderRadius.circular(10),
            ),
            child: Icon(icon, color: color, size: 24),
          ),
          SizedBox(width: 16),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: GoogleFonts.notoSansLao(
                    fontSize: 14,
                    fontWeight: FontWeight.w600,
                    color: Colors.grey[800],
                  ),
                ),
                SizedBox(height: 4),
                Text(
                  content,
                  style: GoogleFonts.notoSansLao(
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                    color: color,
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildCurriculumSection() {
    // ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏à‡∏≤‡∏Å details
    List<String> majors = _extractMajorsFromDetails(widget.course.details);

    return Container(
      margin: EdgeInsets.all(20),
      padding: EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.06),
            blurRadius: 10,
            offset: Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Icon(Icons.menu_book, color: Color(0xFF07325D), size: 24),
              SizedBox(width: 8),
              Text(
                '‡∫´‡∫º‡∫±‡∫Å‡∫™‡∫π‡∫î‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤',
                style: GoogleFonts.notoSansLao(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Color(0xFF07325D),
                ),
              ),
            ],
          ),
          SizedBox(height: 16),

          // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏´‡∏•‡∏±‡∏Å
          Container(
            width: double.infinity,
            child: Column(
              children: [
                // ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
                _buildCurriculumInfoCard(
                  Icons.access_time,
                  '‡ªÑ‡∫•‡∫ç‡∫∞‡ªÄ‡∫ß‡∫•‡∫≤‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤',
                  _getCourseDuration(),
                  Color(0xFF4CAF50),
                ),

                SizedBox(height: 12),

                // ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
                _buildCurriculumInfoCard(
                  Icons.schedule,
                  '‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤',
                  _getCourseSystem(),
                  Color(0xFFFF9800),
                ),

                SizedBox(height: 12),

                // ‡∏†‡∏≤‡∏©‡∏≤‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
                _buildCurriculumInfoCard(
                  Icons.language,
                  '‡∫û‡∫≤‡∫™‡∫≤‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤',
                  '‡∫•‡∫≤‡∫ß, ‡∫≠‡∫±‡∫á‡∫Å‡∫¥‡∫î',
                  Color(0xFF9C27B0),
                ),
              ],
            ),
          ),

          SizedBox(height: 20),

          // ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢
          Container(
            padding: EdgeInsets.all(12),
            decoration: BoxDecoration(
              gradient: LinearGradient(
                colors: [Color(0xFF07325D), Color(0xFF0A4A73)],
              ),
              borderRadius: BorderRadius.circular(8),
            ),
            child: Row(
              children: [
                Icon(Icons.list_alt, color: Colors.white, size: 20),
                SizedBox(width: 8),
                Text(
                  majors.isNotEmpty ? '‡∫™‡∫≤‡∫Ç‡∫≤‡∫ß‡∫¥‡∫ä‡∫≤‡∫ó‡∫µ‡ªà‡ªÄ‡∫õ‡∫µ‡∫î‡∫™‡∫≠‡∫ô' : '‡∫´‡∫º‡∫±‡∫Å‡∫™‡∫π‡∫î‡∫õ‡∫∞‡∫Å‡∫≠‡∫ö‡∫î‡ªâ‡∫ß‡∫ç',
                  style: GoogleFonts.notoSansLao(
                    fontSize: 14,
                    fontWeight: FontWeight.bold,
                    color: Colors.white,
                  ),
                ),
              ],
            ),
          ),
          SizedBox(height: 12),

          // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£
          _buildCurriculumComponents(),
        ],
      ),
    );
  }

  // ‚úÖ Widget ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£
  Widget _buildCurriculumInfoCard(
    IconData icon,
    String title,
    String content,
    Color color,
  ) {
    return Container(
      padding: EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(12),
        border: Border.all(color: color.withOpacity(0.3)),
        boxShadow: [
          BoxShadow(
            color: color.withOpacity(0.1),
            blurRadius: 8,
            offset: Offset(0, 2),
          ),
        ],
      ),
      child: Row(
        children: [
          Container(
            padding: EdgeInsets.all(10),
            decoration: BoxDecoration(
              color: color.withOpacity(0.1),
              borderRadius: BorderRadius.circular(8),
            ),
            child: Icon(icon, color: color, size: 20),
          ),
          SizedBox(width: 16),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: GoogleFonts.notoSansLao(
                    fontSize: 13,
                    color: Colors.grey[600],
                    fontWeight: FontWeight.w500,
                  ),
                ),
                Text(
                  content,
                  style: GoogleFonts.notoSansLao(
                    fontSize: 16,
                    color: color,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildCurriculumComponents() {
    List<String> majors = _extractMajorsFromDetails(widget.course.details);

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏≤‡∏Ç‡∏≤ ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    List<String> curriculumComponents =
        majors.isNotEmpty
            ? majors
            : [
              '‡∫ß‡∫¥‡∫ä‡∫≤‡∫û‡∫∑‡ªâ‡∫ô‡∫ñ‡∫≤‡∫ô (General Education)',
              '‡∫ß‡∫¥‡∫ä‡∫≤‡ªÅ‡∫Å‡∫ô (Core Courses)',
              '‡∫ß‡∫¥‡∫ä‡∫≤‡ªÄ‡∫≠‡∫Å (Major Courses)',
              '‡∫ß‡∫¥‡∫ä‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å (Elective Courses)',
              '‡∫Å‡∫≤‡∫ô‡∫ù‡∫∂‡∫Å‡∫á‡∫≤‡∫ô (Internship)',
              '‡∫ß‡∫¥‡∫ó‡∫∞‡∫ç‡∫≤‡∫ô‡∫¥‡∫û‡∫ª‡∫ô (Thesis/Capstone Project)',
            ];

    return Column(
      children:
          curriculumComponents
              .map(
                (component) => Container(
                  margin: EdgeInsets.only(bottom: 8),
                  padding: EdgeInsets.symmetric(horizontal: 16, vertical: 12),
                  decoration: BoxDecoration(
                    color: Colors.white,
                    borderRadius: BorderRadius.circular(10),
                    border: Border.all(
                      color: Color(0xFF07325D).withOpacity(0.15),
                      width: 1,
                    ),
                    boxShadow: [
                      BoxShadow(
                        color: Colors.black.withOpacity(0.02),
                        blurRadius: 4,
                        offset: Offset(0, 2),
                      ),
                    ],
                  ),
                  child: Row(
                    children: [
                      Container(
                        width: 8,
                        height: 8,
                        decoration: BoxDecoration(
                          color: Color(0xFF07325D),
                          shape: BoxShape.circle,
                        ),
                      ),
                      SizedBox(width: 12),
                      Expanded(
                        child: Text(
                          component,
                          style: GoogleFonts.notoSansLao(
                            fontSize: 14,
                            color: Colors.grey[700],
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              )
              .toList(),
    );
  }

  Widget _buildCareerProspectsSection() {
    return Container(
      margin: EdgeInsets.all(20),
      padding: EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.06),
            blurRadius: 10,
            offset: Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Icon(Icons.work_outline, color: Color(0xFF07325D), size: 24),
              SizedBox(width: 8),
              Text(
                '‡ªÇ‡∫≠‡∫Å‡∫≤‡∫î‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡ªÄ‡∫Æ‡∫±‡∫î‡∫ß‡∫Ω‡∫Å',
                style: GoogleFonts.notoSansLao(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Color(0xFF07325D),
                ),
              ),
            ],
          ),
          SizedBox(height: 16),
          _buildCareerOption(
            '‡∫ó‡∫∞‡∫ô‡∫≤‡∫Ñ‡∫≤‡∫ô',
            '‡∫ô‡∫±‡∫Å‡∫ß‡∫¥‡ªÄ‡∫Ñ‡∫≤‡∫∞‡∫™‡∫¥‡∫ô‡ªÄ‡∫ä‡∫∑‡ªà‡∫≠, ‡∫ö‡∫±‡∫ô‡∫î‡∫≤‡ªÄ‡∫à‡∫ª‡ªâ‡∫≤‡ªú‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡∫ó‡∫∞‡∫ô‡∫≤‡∫Ñ‡∫≤‡∫ô',
            FontAwesomeIcons.university,
          ),
          SizedBox(height: 12),
          _buildCareerOption(
            '‡∫ö‡ªç‡∫•‡∫¥‡∫™‡∫±‡∫î‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô',
            '‡∫ó‡∫µ‡ªà‡∫õ‡∫∂‡∫Å‡∫™‡∫≤‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô, ‡∫ô‡∫±‡∫Å‡∫ß‡∫¥‡ªÄ‡∫Ñ‡∫≤‡∫∞‡∫Å‡∫≤‡∫ô‡∫•‡∫ª‡∫á‡∫ó‡∫∂‡∫ô',
            FontAwesomeIcons.chartLine,
          ),
          SizedBox(height: 12),
          _buildCareerOption(
            '‡∫•‡∫±‡∫î‡∫ß‡∫¥‡∫™‡∫≤‡∫´‡∫∞‡∫Å‡∫¥‡∫î',
            '‡ªÄ‡∫à‡∫ª‡ªâ‡∫≤‡ªú‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡∫Å‡∫≤‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô, ‡∫ô‡∫±‡∫Å‡∫ö‡∫±‡∫ô‡∫ä‡∫µ',
            FontAwesomeIcons.building,
          ),
        ],
      ),
    );
  }

  Widget _buildCareerOption(String title, String description, IconData icon) {
    return Container(
      padding: EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Color(0xFF07325D).withOpacity(0.05),
        borderRadius: BorderRadius.circular(12),
        border: Border.all(color: Color(0xFF07325D).withOpacity(0.1), width: 1),
      ),
      child: Row(
        children: [
          Container(
            padding: EdgeInsets.all(10),
            decoration: BoxDecoration(
              color: Color(0xFF07325D).withOpacity(0.1),
              borderRadius: BorderRadius.circular(8),
            ),
            child: Icon(icon, color: Color(0xFF07325D), size: 20),
          ),
          SizedBox(width: 16),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: GoogleFonts.notoSansLao(
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                    color: Color(0xFF07325D),
                  ),
                ),
                SizedBox(height: 4),
                Text(
                  description,
                  style: GoogleFonts.notoSansLao(
                    fontSize: 13,
                    color: Colors.grey[600],
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildAdmissionRequirementsSection() {
    return Container(
      margin: EdgeInsets.all(20),
      padding: EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.06),
            blurRadius: 10,
            offset: Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Icon(
                Icons.fact_check_outlined,
                color: Color(0xFF07325D),
                size: 24,
              ),
              SizedBox(width: 8),
              Text(
                '‡ªÄ‡∫á‡∫∑‡ªà‡∫≠‡∫ô‡ªÑ‡∫Ç‡∫Å‡∫≤‡∫ô‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫™‡∫∂‡∫Å‡∫™‡∫≤',
                style: GoogleFonts.notoSansLao(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Color(0xFF07325D),
                ),
              ),
            ],
          ),
          SizedBox(height: 16),
          _buildRequirementItem('‡∫à‡∫ª‡∫ö‡∫Å‡∫≤‡∫ô‡∫™‡∫∂‡∫Å‡∫™‡∫≤‡∫ä‡∫±‡ªâ‡∫ô‡∫°‡∫±‡∫î‡∫ó‡∫∞‡∫ç‡∫ª‡∫°‡∫ï‡∫≠‡∫ô‡∫õ‡∫≤‡∫ç ‡∫´‡∫º‡∫∑ ‡ªÄ‡∫ó‡∫ª‡ªà‡∫≤‡∫ó‡∫Ω‡∫°'),
          _buildRequirementItem('‡∫ú‡ªà‡∫≤‡∫ô‡∫Å‡∫≤‡∫ô‡∫™‡∫≠‡∫ö‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫Ç‡∫≠‡∫á‡∫™‡∫∞‡∫ñ‡∫≤‡∫ö‡∫±‡∫ô'),
          _buildRequirementItem('‡∫°‡∫µ‡∫™‡∫∏‡∫Ç‡∫∞‡∫û‡∫≤‡∫ö‡ªÅ‡∫Ç‡∫á‡ªÅ‡∫Æ‡∫á'),
          _buildRequirementItem('‡∫™‡∫ª‡ªà‡∫á‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô‡∫Ñ‡∫ª‡∫ö‡∫ñ‡ªâ‡∫ß‡∫ô'),
        ],
      ),
    );
  }

  Widget _buildRequirementItem(String requirement) {
    return Padding(
      padding: EdgeInsets.only(bottom: 12),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            margin: EdgeInsets.only(top: 2),
            padding: EdgeInsets.all(2),
            decoration: BoxDecoration(
              color: Color(0xFF4CAF50),
              shape: BoxShape.circle,
            ),
            child: Icon(Icons.check, color: Colors.white, size: 12),
          ),
          SizedBox(width: 12),
          Expanded(
            child: Text(
              requirement,
              style: GoogleFonts.notoSansLao(
                fontSize: 14,
                color: Colors.grey[700],
                height: 1.5,
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildContactSection() {
    return Container(
      margin: EdgeInsets.all(20),
      padding: EdgeInsets.all(20),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          colors: [Color(0xFF07325D), Color(0xFF0A4A73)],
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
        ),
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Color(0xFF07325D).withOpacity(0.3),
            blurRadius: 15,
            offset: Offset(0, 8),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Icon(
                Icons.contact_support_outlined,
                color: Colors.white,
                size: 24,
              ),
              SizedBox(width: 8),
              Text(
                '‡∫ï‡∫¥‡∫î‡∫ï‡ªç‡ªà‡∫™‡∫≠‡∫ö‡∫ñ‡∫≤‡∫°',
                style: GoogleFonts.notoSansLao(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Colors.white,
                ),
              ),
            ],
          ),
          SizedBox(height: 16),
          _buildContactItem(
            Icons.phone,
            '‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö',
            '020 5555 5555',
            Colors.white,
          ),
          SizedBox(height: 12),
          _buildContactItem(
            Icons.email_outlined,
            '‡∫≠‡∫µ‡ªÄ‡∫°‡∫•',
            'info@bibol.edu.la',
            Colors.white,
          ),
          SizedBox(height: 12),
          _buildContactItem(
            Icons.location_on_outlined,
            '‡∫ó‡∫µ‡ªà‡∫ï‡∫±‡ªâ‡∫á',
            '‡∫ß‡∫Ω‡∫á‡∫à‡∫±‡∫ô, ‡∫™‡∫õ‡∫õ ‡∫•‡∫≤‡∫ß',
            Colors.white,
          ),
        ],
      ),
    );
  }

  Widget _buildContactItem(
    IconData icon,
    String title,
    String content,
    Color color,
  ) {
    return Row(
      children: [
        Icon(icon, color: color.withOpacity(0.8), size: 20),
        SizedBox(width: 12),
        Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              title,
              style: GoogleFonts.notoSansLao(
                fontSize: 12,
                color: color.withOpacity(0.8),
              ),
            ),
            Text(
              content,
              style: GoogleFonts.notoSansLao(
                fontSize: 14,
                fontWeight: FontWeight.w600,
                color: color,
              ),
            ),
          ],
        ),
      ],
    );
  }

  Widget _buildFloatingActionButton() {
    return FloatingActionButton.extended(
      onPressed: () {
        HapticFeedback.mediumImpact();
        // Show application form or contact
        showModalBottomSheet(
          context: context,
          backgroundColor: Colors.transparent,
          isScrollControlled: true,
          builder:
              (context) => Container(
                height: MediaQuery.of(context).size.height * 0.7,
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.only(
                    topLeft: Radius.circular(20),
                    topRight: Radius.circular(20),
                  ),
                ),
                child: Column(
                  children: [
                    Container(
                      width: 40,
                      height: 4,
                      margin: EdgeInsets.only(top: 12),
                      decoration: BoxDecoration(
                        color: Colors.grey[300],
                        borderRadius: BorderRadius.circular(2),
                      ),
                    ),
                    Padding(
                      padding: EdgeInsets.all(20),
                      child: Column(
                        children: [
                          Text(
                            '‡∫™‡∫ª‡∫ô‡ªÉ‡∫à‡∫™‡∫∞‡ªù‡∫±‡∫Å‡∫Æ‡∫Ω‡∫ô?',
                            style: GoogleFonts.notoSansLao(
                              fontSize: 20,
                              fontWeight: FontWeight.bold,
                              color: Color(0xFF07325D),
                            ),
                          ),
                          SizedBox(height: 20),
                          ElevatedButton.icon(
                            onPressed: () {
                              // Handle application
                            },
                            icon: Icon(Icons.app_registration),
                            label: Text(
                              '‡ªÅ‡∫ö‡∫ö‡∫ü‡∫≠‡∫°‡∫™‡∫∞‡ªù‡∫±‡∫Å‡∫Æ‡∫Ω‡∫ô',
                              style: GoogleFonts.notoSansLao(
                                fontWeight: FontWeight.w600,
                              ),
                            ),
                            style: ElevatedButton.styleFrom(
                              backgroundColor: Color(0xFF07325D),
                              foregroundColor: Colors.white,
                              padding: EdgeInsets.symmetric(
                                horizontal: 24,
                                vertical: 12,
                              ),
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(12),
                              ),
                            ),
                          ),
                          SizedBox(height: 12),
                          OutlinedButton.icon(
                            onPressed: () {
                              // Handle contact
                            },
                            icon: Icon(Icons.phone),
                            label: Text(
                              '‡∫ï‡∫¥‡∫î‡∫ï‡ªç‡ªà‡∫™‡∫≠‡∫ö‡∫ñ‡∫≤‡∫°',
                              style: GoogleFonts.notoSansLao(
                                fontWeight: FontWeight.w600,
                              ),
                            ),
                            style: OutlinedButton.styleFrom(
                              foregroundColor: Color(0xFF07325D),
                              side: BorderSide(color: Color(0xFF07325D)),
                              padding: EdgeInsets.symmetric(
                                horizontal: 24,
                                vertical: 12,
                              ),
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(12),
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
        );
      },
      backgroundColor: Color(0xFF07325D),
      foregroundColor: Colors.white,
      icon: Icon(Icons.school),
      label: Text(
        '‡∫™‡∫∞‡ªù‡∫±‡∫Å‡∫Æ‡∫Ω‡∫ô',
        style: GoogleFonts.notoSansLao(fontWeight: FontWeight.w600),
      ),
    );
  }
}
