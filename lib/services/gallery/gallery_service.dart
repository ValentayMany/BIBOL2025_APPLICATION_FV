import 'dart:convert';
import 'package:BIBOL/config/bibol_api.dart';
import 'package:BIBOL/models/gallery/gallery_model.dart';
import 'package:BIBOL/models/gallery/gallery_response.dart';
import 'package:http/http.dart' as http;

/// üñºÔ∏è GalleryService - Service ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ‡πà
/// 
/// Service ‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
/// 
/// **‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å:**
/// - ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ gallery items ‡∏û‡∏£‡πâ‡∏≠‡∏° pagination
/// - ‡∏î‡∏∂‡∏á gallery item ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ï‡∏≤‡∏° ID
/// - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö UTF-8 encoding
/// 
/// **‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:**
/// ```dart
/// final galleryService = GalleryService();
/// 
/// // ‡∏î‡∏∂‡∏á gallery ‡∏Ç‡∏≠‡∏á user
/// final gallery = await galleryService.getUserGallery(
///   userId: '123',
///   page: 1,
///   count: 10,
/// );
/// 
/// // ‡∏î‡∏∂‡∏á gallery item ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
/// final item = await galleryService.getGalleryById('123', 456);
/// ```
class GalleryService {
  /// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• gallery items ‡∏Ç‡∏≠‡∏á user ‡∏û‡∏£‡πâ‡∏≠‡∏° pagination
  /// 
  /// **Parameters:**
  /// - [userId] - ID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (required)
  /// - [page] - ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡πâ‡∏≤ (default: 1)
  /// - [count] - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ (default: 5)
  /// 
  /// **Returns:**
  /// - [GalleryResponse?] - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• gallery ‡∏´‡∏£‡∏∑‡∏≠ null ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
  Future<GalleryResponse?> getUserGallery({
    required String userId,
    int page = 1,
    int count = 5,
  }) async {
    try {
      final url = Uri.parse(
        GalleryApiConfig.getUserTopics(userId, page, count),
      );

      final response = await http.get(
        url,
        headers: {
          'Content-Type': 'application/json; charset=UTF-8',
          // ‡πÄ‡∏û‡∏¥‡πà‡∏° Authorization header ‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
          // 'Authorization': 'Bearer YOUR_TOKEN',
        },
      );

      if (response.statusCode == 200) {
        final jsonData = json.decode(utf8.decode(response.bodyBytes));
        return GalleryResponse.fromJson(jsonData);
      } else {
        print('Error: ${response.statusCode}');
        print('Body: ${response.body}');
        return null;
      }
    } catch (e) {
      print('Exception: $e');
      return null;
    }
  }

  /// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• gallery item ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
  Future<GalleryModel?> getGalleryById(String userId, int itemId) async {
    try {
      final url = Uri.parse(GalleryApiConfig.getTopicById(userId, itemId));

      final response = await http.get(
        url,
        headers: {'Content-Type': 'application/json; charset=UTF-8'},
      );

      if (response.statusCode == 200) {
        final jsonData = json.decode(utf8.decode(response.bodyBytes));
        return GalleryModel.fromJson(jsonData);
      } else {
        return null;
      }
    } catch (e) {
      print('Exception: $e');
      return null;
    }
  }
}
